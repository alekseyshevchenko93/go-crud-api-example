// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/portfolios": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portfolios"
                ],
                "summary": "Get portfolios array",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Portfolio"
                            }
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portfolios"
                ],
                "summary": "Updates portfolio",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Portfolio ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Portfolio Body",
                        "name": "portfolio",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdatePortfolioRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Portfolio"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portfolios"
                ],
                "summary": "Creates portfolio",
                "parameters": [
                    {
                        "description": "Portfolio Body",
                        "name": "portfolio",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreatePortfolioRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Portfolio"
                        }
                    }
                }
            }
        },
        "/portfolios/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portfolios"
                ],
                "summary": "Gets portfolio by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Portfolio ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Portfolio"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes portfolio",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portfolios"
                ],
                "summary": "Deletes portfolio by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Portfolio ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Portfolio": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isFinance": {
                    "type": "boolean"
                },
                "isInternal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "requests.CreatePortfolioRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "isActive": {
                    "type": "boolean"
                },
                "isFinance": {
                    "type": "boolean"
                },
                "isInternal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "requests.UpdatePortfolioRequest": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isFinance": {
                    "type": "boolean"
                },
                "isInternal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Example CRUD API",
	Description:      "Example CRUD API for portfolios entity",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
